AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Environment:
    Description: Environment name (e.g., dev, prod, staging)
    Type: String
    AllowedValues:
      - dev
      - staging
      - prod
    Default: dev

  CaptchaSolvingLambdaPrefix:
    Description: Name of the Lambda function
    Type: String
    Default: EqmCaptchaSolvingLambda

Resources:

  EqmCaptchas:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'eqm-captchas-${Environment}'
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:*'
            Function: !GetAtt EqmCaptchaSolvingLambda.Arn
            #!Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${CaptchaSolvingLambdaPrefix}-${Environment}
    DependsOn:
      - EqmCaptchaSolvingLambda
      - EqmCaptchaSolvingLambdaPermission

  EqmCaptchasBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref EqmCaptchas
      PolicyDocument:
        Statement:
          - Action:
              - 's3:PutObject'
              - 's3:GetObject'
              - 's3:ListBucket'
            Resource: #!Ref EqmCaptchas won't work for S3 buckets
              - !Sub '${EqmCaptchas.Arn}/*'
              - !GetAtt EqmCaptchas.Arn
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
    DependsOn:
      - EqmCaptchas

  EqmCaptchaSolvingLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub ${CaptchaSolvingLambdaPrefix}-${Environment}
      Role: !GetAtt EqmCaptchaSolvingLambdaRole.Arn
      Code:
        S3Bucket: !Sub 
            - "${ImportedBucketName}"
            - ImportedBucketName: !ImportValue 
                Fn::Sub: EqmPackagesBucketName-${Environment}
        S3Key: CaptchaSolvingLambda.zip
      Handler: >-
        CaptchaSolvingLambda.Function::CaptchaSolvingLambda.Function.FunctionHandler
      Runtime: dotnet6
      MemorySize: 256
      Timeout: 20
    DependsOn:
      - EqmCaptchaSolvingLambdaRole
    
  EqmCaptchaSolvingLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub ${CaptchaSolvingLambdaPrefix}-${Environment}-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies: #TODO maybe add DynamoDb read/write permissions if not possible to set on Dynamo side
        - PolicyName: EqmLambdaExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'

  EqmCaptchaSolvingLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt EqmCaptchaSolvingLambda.Arn
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub arn:aws:s3:::eqm-captchas-${Environment} #Copied from the bucket name
    DependsOn:
      - EqmCaptchaSolvingLambda

Outputs:

  EqmCaptchasBucketName:
    Description: "S3 Bucket name for EqmCaptchas"
    Value: !Ref EqmCaptchas
    Export:
      Name: !Sub EqmCaptchasBucketName-${Environment}

  EqmCaptchaSolvingLambdaArn:
    Description: "Captcha Solving Lambda ARN"
    Value: !GetAtt EqmCaptchaSolvingLambda.Arn
    Export:
      Name: EqmCaptchaSolvingLambdaArn